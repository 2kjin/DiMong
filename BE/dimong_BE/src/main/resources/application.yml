server:
  # 효진 노트북 local 용
  port: 8086

  # develop 브랜치 용
  #  port: 8080

  servlet:
    context-path: /
    encoding:
      charset: utf-8
      enabled: true


spring:
  datasource:
    # develop 브랜치 용
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://j8a105.p.ssafy.io:3333/dimong?useUnicode=true&characterEncoding=utf-8
    username: dimong
    password: a105dimong

    # ssafy 노트북 local 용
    #        driver-class-name: org.mariadb.jdbc.Driver
    #        url: jdbc:mariadb://localhost:3306/bundler?useUnicode=true&characterEncoding=utf-8
    #        username: root
    #        password: ssafy

    # 효진 노트북 local 용
    #    url: jdbc:mysql://localhost:3306/bundler?useUnicode=true&characterEncoding=utf-8
    #    username: ssafy
    #    password: ssafy
    #    driver-class-name: com.mysql.cj.jdbc.Driver

    #추가
    hikari:
      pool-name: jpa-hikari-pool
      maximum-pool-size: 5
      jdbc-url: ${spring.datasource.url}
      username: ${spring.datasource.username}
      password: ${spring.datasource.password}
      driver-class-name: ${spring.datasource.driver-class-name}
      data-source-properties:
        rewriteBatchedStatements: true


  output.ansi.enabled: always
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: update # create, update, none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl # 대문자, 소분자 구분
    #    show-sql: true
    generate-ddl: true
    properties:
      hibernate:
        #        dialect:
        #        default_schema:
        format_sql: true
    defer-datasource-initialization: true


  jackson:
    serialization:
      write-dates-as-timestamps: false
    time-zone: Asia/Seoul

  security:
    oauth2:
      client:
        registration:
          google: # /oauth2/authorization/google 이 주소를 동작하게 한다.
            client-id: 머시기
            client-secret: 머시기
            scope:
              - email
              - profile

          facebook:
            client-id: 머시기
            client-secret: 머시기
            scope:
              - email
              - public_profile

          github:
            # <Bundler 계정>
            # ============================================================
            # Github
            # -> Your Organizations
            # -> A810-Bundler
            # -> Settings
            # -> Developer Settings
            # -> OAuth Apps
            # -> Bundler
            # -> Homepage URL : 프론트엔드 url. ex) http://localhost:3000 or http://i8a810.p.ssafy.io:3000/home or http://i8a810.p.ssafy.io:3000
            #    Authorization callback URL : 백엔드 도메인. ex) http://localhost:포트번호/login/oauth2/code/github or http://i8a810.p.ssafy.io:8080/login/oauth2/code/github
            # 로 바꾸고 하세요!!!!
            # ============================================================
            #            client-id: acbab22d3c358f0c4b43
            #            client-secret: a24a29bbe5a2d1f16e63e18ed19c9d49814eb2fe
            #            scope:
            #              - repo
            #              - read:user

            #<효진 계정>
            client-id: d747a562f5f038b5b11f
            client-secret: 219edd44751f80af612289c6b874f811679a2b1b
            scope:
              - repo
              - read:user
          #            redirect-uri: http:///login/oauth2/code/github


          naver:
            client-id: 머시기
            client-secret: 머시기
            scope:
              - name
              - email
              - profile_image
            client-name: Naver # 클라이언트 네임은 구글 페이스북도 대문자로 시작하더라.
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # 회원정보를 json의 response 키값으로 리턴해줌.
  mvc:
    log-request-details: true # request의 parameter 값 등을 log에서 못 보는 설정 해제

  servlet:
    multipart:
      maxFileSize: 10MB
      max-request-size: 10MB


logging.level:
  #  org.apache: trace
  org.hibernate.SQL: debug
  org.hibernate.type: trace
  org:
    springframework:

      security: trace
      security.oauth2:
        client: trace
        core: trace

      boot:
        autoconfigure:
          security: trace
      web: trace

      http: trace


# cors 설정
#cors:
#  allowedOrigins: 'http://localhost:3000'
#  allowedMethods: GET,POST,PUT,DELETE,OPTIONS
#  allowedHeaders: '*'
#  maxAge: 3600


# jwt secret key 설정
jwt:
  secret: 926D96C90030DD58429D2751AC1BDBBC


# 토큰 관련 secret Key 및 RedirectUri 설정
app:
  jwt:
    secret: 926D96C90030DD58429D2751AC1BDBBC
    accessTokenPeriod: 1800000 #3분
    refreshTokenPeriod: 604800000 #10080분 == 168시간 == 7일

  #      secret: "hahaha"
  #      accessTokenPeriod: 3600000 # 1시간 : 60 * 60 * 1000
  #      refreshTokenPeriod: 1209600000 # 14일 : 14 * 24 * 60 * 60 * 1000


  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpiry: 1800000 #3분
    refreshTokenExpiry: 604800000 #10080분 == 168시간 == 7일
  oauth2:
    authorizedRedirectUris: #OAuth 로그인 성공 시 보여줄 프론트 url 등록
      - http://127.0.0.1:5500/success.html
      - http://127.0.0.1:5500/test.html
      - http://localhost:5500/test.html
      - http://localhost:5500/success.html
      - http://localhost:3000/
      - http://i8a810.p.ssafy.io:3000
      - http://i8a810.p.ssafy.io:3000/home

  firebase-configuration-file: ./serviceAccountKey.json
  firebase-bucket: dimong-be.appspot.com

  target:
    uri: http://j8a105.p.ssafy.io:8000/api

